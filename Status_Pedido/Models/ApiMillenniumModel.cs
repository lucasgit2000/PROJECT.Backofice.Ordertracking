// <auto-generated from https://app.quicktype.io/#l=cs&r=json2csharp />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Status_Pedido.Models.RequisicaoApi;
//
//    var pedidos = Pedidos.FromJson(jsonString);

using System;
using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Status_Pedido.ViewModels;

namespace Status_Pedido.Models
{

    public partial class JsonApi
    {
        [JsonProperty("odata.metadata")]
        public Uri OdataMetadata { get; set; }

        [JsonProperty("odata.count")]
        public long OdataCount { get; set; }

        [JsonProperty("value")]
        public ValuesJsonApi[] Value { get; set; }
    }

    public partial class ValuesJsonApi
    {
        [JsonProperty("pedido")]
        public string Pedido { get; set; }

        [JsonProperty("status")]
        public string Status { get; set; }

        [JsonProperty("data_pedido")]
        public string DataPedido { get; set; }

        [JsonProperty("data_atualizacao")]
        public string DataAtualizacao { get; set; }

        [JsonProperty("valor_pedido")]
        public double ValorPedido { get; set; }

        [JsonProperty("nome_cliente")]
        public string NomeCliente { get; set; }
    }

    public partial class JsonApi
    {
        public static JsonApi FromJson(string json) => JsonConvert.DeserializeObject<JsonApi>(json, Status_Pedido.Models.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this JsonApi self) => JsonConvert.SerializeObject(self, Status_Pedido.Models.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
